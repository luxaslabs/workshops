apiVersion: v1
kind: Namespace
metadata:
  name: workshopctl
  namespace: workshopctl
---
apiVersion: v1
data:
  config: |-
    apiVersion: v1
    kind: Config
    clusters:
    - cluster:
        certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        server: https://kubernetes.default.svc.cluster.local
      name: default
    contexts:
    - context:
        cluster: default
        namespace: default
        user: default
      name: default
    current-context: default
    users:
    - name: default
      user:
        tokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
kind: ConfigMap
metadata:
  labels:
    app: code-server
  name: code-server
  namespace: workshopctl
---
apiVersion: v1
data:
  traefik.toml: "debug = true\nlogLevel = \"DEBUG\"\n# Traefik should be able to access
    the kubernetes-dashboard over HTTPS without having to trust the dashboard's self-signed
    cert \ninsecureSkipVerify = true\ndefaultEntryPoints = [\"http\", \"https\"]\n[entryPoints]\n
    \ [entryPoints.http]\n  address = \":80\"\n    [entryPoints.http.redirect]\n    entryPoint
    = \"https\"\n  [entryPoints.https]\n  address = \":443\"\n  [entryPoints.https.tls]\n
    \ [entryPoints.api]\n  address = \":8080\"\n[acme]\nemail = \"luxas@luxaslabs.com\"\n#
    Move to use etcd or a PV as the backing Let's Encrypt store\nstorage = \"/letsencrypt/acme.json\"\nonHostRule
    = true\nentryPoint = \"https\"\n[acme.httpChallenge]\n  entryPoint = \"http\"\n#
    Enable the kubernetes integration\n[kubernetes]\n[kubernetes.ingressEndpoint]\npublishedService
    = \"workshopctl/traefik\"\n# Enable the traefik API on port 8080\n[api]\nentryPoint
    = \"api\"\ndashboard = true\ndebug = true\n# Enable the /metrics endpoint\n[api.statistics]\n[ping]\nentryPoint
    = \"api\"\n"
kind: ConfigMap
metadata:
  labels:
    app: traefik
  name: traefik-cfg
  namespace: workshopctl
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: code-server
  namespace: workshopctl
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: workshopctl
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik
  namespace: workshopctl
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
  namespace: workshopctl
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik
  namespace: workshopctl
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: code-server
  namespace: workshopctl
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: code-server
  namespace: workshopctl
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
  namespace: workshopctl
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: workshopctl
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik
  namespace: workshopctl
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik
subjects:
- kind: ServiceAccount
  name: traefik
  namespace: workshopctl
---
apiVersion: v1
kind: Service
metadata:
  name: code-server
  namespace: workshopctl
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: code-server
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: workshopctl
spec:
  ports:
  - name: http
    port: 80
  - name: https
    port: 443
  selector:
    app: traefik
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: code-server
  name: code-server
  namespace: workshopctl
spec:
  selector:
    matchLabels:
      app: code-server
  template:
    metadata:
      labels:
        app: code-server
    spec:
      containers:
      - env:
        - name: GIT_REPO
          value: https://github.com/luxas/workshopctl
        - name: GIT_SUBDIR
          value: tutorials
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              key: VSCODE_PASSWORD
              name: workshopctl
        image: luxas/k8s-web-ide:v2.0.0
        imagePullPolicy: Always
        name: code-server
        ports:
        - containerPort: 8080
          name: http
        volumeMounts:
        - mountPath: /home/coder/.kube
          name: kubeconfig
        - mountPath: /var/run/docker.sock
          name: docker
      serviceAccountName: code-server
      volumes:
      - configMap:
          name: code-server
        name: kubeconfig
      - hostPath:
          path: /var/run/docker.sock
        name: docker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: workshopctl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      containers:
      - args:
        - --source=service
        - --source=ingress
        - --domain-filter=gke-workshops.luxaslabs.com.
        - --provider=google
        - --policy=upsert-only
        - --registry=txt
        - --txt-owner-id=workshopctl
        env:
        - name: PROVIDER_SERVICEACCOUNT
          valueFrom:
            secretKeyRef:
              key: PROVIDER_SERVICEACCOUNT
              name: workshopctl
        image: registry.opensource.zalan.do/teapot/external-dns:v0.5.17
        name: external-dns
      serviceAccountName: external-dns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: traefik
  name: traefik
  namespace: workshopctl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      containers:
      - args:
        - --configfile=/etc/traefik/traefik.toml
        image: traefik:v1.7.18-alpine
        name: traefik
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        volumeMounts:
        - mountPath: /etc/traefik/
          name: traefik-cfg
        - mountPath: /letsencrypt
          name: letsencrypt
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 60
      volumes:
      - configMap:
          name: traefik-cfg
        name: traefik-cfg
      - hostPath:
          path: /tmp/traefik
        name: letsencrypt
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: code-server
  namespace: workshopctl
spec:
  rules:
  - host: cluster-04.gke-workshops.luxaslabs.com
    http:
      paths:
      - backend:
          serviceName: code-server
          servicePort: 80
        path: /